name: CI

on:
  push:
  pull_request:
    types: [opened, reopened, edited, synchronize]
  release:
    types: [created]
    
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1

      - name: Tags
        if: success()
        run: |
          echo ::set-env name=BRANCH_TAG::$(echo "branch_"$(echo $GITHUB_REF | sed 's@.*/@@').$(echo $GITHUB_SHA | cut -c 1-10))
          echo ::set-env name=RELEASE_TAG::$(echo "release_"$(echo $GITHUB_REF | sed 's@.*/@@' | sed -e 's/[^0-9. ]*//g' -e  's/ \+/ /g').$(echo $GITHUB_SHA | cut -c 1-10))
          echo ::set-env name=PR_TAG::$(echo "pull_request_"$(echo $GITHUB_SHA | cut -c 1-10))

      - name: Build Image and Push Latest [master]
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'acend-io/docker-selenium-standalone-chrome-ruby'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          ECR_REPO: ${{ secrets.AWS_ECR_REPO }}
        run: |
          eval $(aws ecr get-login --region us-east-1 --no-include-email)
          docker build -t $ECR_REPO:latest -f ./Dockerfile .
          docker push $ECR_REPO:latest

      - name: Build Image and Push [branch]
        if: success() && github.event_name == 'push' && github.ref != 'refs/heads/master'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          ECR_REPO: ${{ secrets.AWS_ECR_REPO }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          eval $(aws ecr get-login --region us-east-1 --no-include-email)
          docker build -t $ECR_REPO:$BRANCH_TAG -f ./Dockerfile .
          docker push $ECR_REPO:$BRANCH_TAG
      
      - name: Build Image and Push [pull_request]
        if: success() && github.event_name == 'pull_request'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          ECR_REPO: ${{ secrets.AWS_ECR_REPO }}
        run: |
          eval $(aws ecr get-login --region us-east-1 --no-include-email)
          docker build -t $ECR_REPO:$PR_TAG -f ./Dockerfile .
          docker push $ECR_REPO:$PR_TAG
        
